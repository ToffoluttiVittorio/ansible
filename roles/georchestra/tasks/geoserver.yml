- name: checkout geoserver datadir
  become: yes
  become_user: tomcat8
  git:
    dest: "{{ geoserver.datadir.path }}"
    repo: "{{ geoserver.datadir.gitrepo }}"
    version: "{{ geoserver.datadir.gitversion }}"
    force: yes

- name: fix geoserver logging path
  become: yes
  become_user: tomcat8
  lineinfile: dest={{ geoserver.datadir.path }}/logging.xml regexp='<location>/tmp/geoserver.log</location>' line='  <location>{{ logs_basedir }}/geoserver.log</location>'

- name: set full geoserver url for getcapabilities docs
  become: yes
  become_user: tomcat8
  lineinfile: dest={{ geoserver.datadir.path }}/global.xml regexp='<proxyBaseUrl>https://georchestra.mydomain.org/geoserver</proxyBaseUrl>' line='    <proxyBaseUrl>https://{{ georchestra.fqdn }}/geoserver</proxyBaseUrl>'

- name: set list of advertised wms srs
  become: yes
  become_user: tomcat8
  lineinfile: dest={{ geoserver.datadir.path }}/wms.xml insertafter='</metadata>' line="<srs><string>{{ geoserver.wms_srslist|join('</string><string>') }}</string></srs>"

- name: fix my_ldap config for usergroup/roles
  tags: fixgsldap
  become: yes
  become_user: tomcat8
  replace:
    dest: "{{ geoserver.datadir.path }}/security/{{ item.1 }}/my_ldap/config.xml"
    regexp: "{{ item.0.pat }}"
    replace: "{{ item.0.val }}"
    backup: yes
  with_nested:
    - [
    { pat: "<user>.*</user>", val: "<user>{{ openldap.rootdn }}</user>" },
    { pat: "<password>.*</password>", val: "<password>{{ openldap.rootpw }}</password>" },
    { pat: "<groupSearchBase>.*</groupSearchBase>", val: "<groupSearchBase>ou=roles,{{ openldap.basedn }}</groupSearchBase>" },
    { pat: "<groupSearchFilter>.*</groupSearchFilter>", val: "<groupSearchFilter>member=uid={0},ou=users,{{ openldap.basedn }}</groupSearchFilter>" },
    { pat: "<userSearchBase>.*</userSearchBase>", val: "<userSearchBase>ou=users,{{ openldap.basedn }}</userSearchBase>" }]
    - [ role, usergroup ]

# alternative could be to checkout the geofence branch of geoserver_minimal_datadir
#- name: enforce geofence auth
#  become: yes
#  become_user: tomcat8
#  lineinfile:
#    dest: '{{ geoserver.datadir.path }}/security/auth/default/config.xml'
#    regexp: '  <className>org.geoserver.security.auth.UsernamePasswordAuthenticationProvider</className>'
#    line: '  <className>it.geosolutions.geoserver.authentication.auth.GeofenceAuthenticationProvider</className>'

- name: create geowebcache datadir
  file: dest={{ geowebcache_datadir }} owner=tomcat8 state=directory

